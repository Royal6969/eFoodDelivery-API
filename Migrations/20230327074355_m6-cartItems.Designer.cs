// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eFoodDelivery_API.DbContexts;

#nullable disable

namespace eFoodDelivery_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230327074355_m6-cartItems")]
    partial class m6cartItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dlk_efooddelivery_api")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("dlk_roles", "dlk_efooddelivery_api");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("dlk_role_claim", "dlk_efooddelivery_api");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("dlk_user_claim", "dlk_efooddelivery_api");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("dlk_user_login", "dlk_efooddelivery_api");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("dlk_user_roles", "dlk_efooddelivery_api");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("dlk_user_tokens", "dlk_efooddelivery_api");
                });

            modelBuilder.Entity("eFoodDelivery_API.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientSecret")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Md_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Md_date");

                    b.Property<Guid>("Md_uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Md_uuid");

                    b.Property<string>("PaymentAttempId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.ToTable("dwh_cart", "dwh_efooddelivery_api");
                });

            modelBuilder.Entity("eFoodDelivery_API.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int")
                        .HasColumnName("CartId");

                    b.Property<DateTime>("Md_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Md_date");

                    b.Property<Guid>("Md_uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Md_uuid");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("dwh_cartItem", "dwh_efooddelivery_api");
                });

            modelBuilder.Entity("eFoodDelivery_API.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Category");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<DateTime>("Md_date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Md_date");

                    b.Property<Guid>("Md_uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Md_uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name");

                    b.Property<double>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price");

                    b.Property<string>("Tag")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Tag");

                    b.HasKey("Id");

                    b.ToTable("dwh_product", "dwh_efooddelivery_api");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Almuerzo",
                            Description = "Receta de cocina con base de arroz, con origen en la actual Comunidad Valenciana, hoy en día muy popular en toda España y servida en restaurantes de todo el mundo.​",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/1.paella-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5222),
                            Md_uuid = new Guid("95b07eab-1e22-4f8f-8130-7c018a9aca6d"),
                            Name = "Paella Valenciana",
                            Price = 9.9499999999999993,
                            Tag = "Mejor valorados"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Almuerzo",
                            Description = "Tortilla u omelet ​ a la que se le agrega patatas troceadas.​ Se trata de uno de los platos más conocidos y emblemáticos de la cocina española.​",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/2.tortilla-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5231),
                            Md_uuid = new Guid("b3dd254c-0280-4539-9ec3-f1a4564d5c38"),
                            Name = "Tortilla de Patatas",
                            Price = 7.9900000000000002,
                            Tag = "Más vendidos"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Almuerzo",
                            Description = "​El salmorejo cordobés es una crema servida habitualmente como primer plato. Se elabora mediante una cierta cantidad de miga de pan,​ a la que se le incluye además ajo, aceite de oliva, sal y tomates.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/3.salmorejo-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5248),
                            Md_uuid = new Guid("dd960ba6-6f3d-4dcf-81f8-a047371d61b4"),
                            Name = "Salmorejo Cordobés",
                            Price = 6.4900000000000002,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Almuerzo",
                            Description = "​Conjunto de hortalizas cocidas con unos aditamentos de carne, pescado y ave condimentada con una salsa mayonesa\", donde la remolacha, las judías verdes y las alcaparras forman parte de la receta.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/4.ensaladilla-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5256),
                            Md_uuid = new Guid("20572bb3-78cb-476d-a3ba-4d8dbd51248f"),
                            Name = "Ensaladilla Rusa",
                            Price = 5.9500000000000002,
                            Tag = "Más vendidos"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Almuerzo",
                            Description = "​Preparación culinaria de España y Portugal habitual de la gente que se dedica a la trashumancia española. Se elabora principalmente con pedazos de la miga de pan tostado acompañados de carnes y verduras.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/5.migas-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5263),
                            Md_uuid = new Guid("eee34e0c-4334-49ac-ab91-c4fcf3053e27"),
                            Name = "Migas Manchegas",
                            Price = 10.99,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Cena",
                            Description = "​Se sirven generalmente como una tapa en muchos bares, o como raciones. Como algunos otros platos de marisco se suelen servir junto con una rodaja de limón.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/6.calamares-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5271),
                            Md_uuid = new Guid("15fa731a-9b3a-4970-96b6-5c1de47ba8f0"),
                            Name = "Calamares a la Romana",
                            Price = 8.75,
                            Tag = "Mejor valorados"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Cena",
                            Description = "​Se trata de un plato festivo elaborado con pulpo cocido entero (generalmente en ollas de cobre) que está presente en las fiestas, ferias y romerías de Galicia.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/7.pulpo-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5281),
                            Md_uuid = new Guid("c401674f-f01d-4b63-b33f-ca9c8ecefe2a"),
                            Name = "Pulpo a la Gallega",
                            Price = 8.5,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Almuerzo",
                            Description = "Guiso cuyo ingrediente principal son los garbanzos y los secundarios, aunque con gran protagonismo, diversas verduras, carnes y tocino de cerdo con algún embutido.​",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/8.cocido-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5288),
                            Md_uuid = new Guid("44372a18-d475-4be2-92f7-e9d0af146ac2"),
                            Name = "Cocido Madrileño",
                            Price = 9.9499999999999993,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Cena",
                            Description = "​Porción de masa hecha de una salsa densa como la bechamel y un picadillo de diversos ingredientes, que ha sido rebozada en huevo y pan rallado, y frita en abundante aceite.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/9.croquetas-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5295),
                            Md_uuid = new Guid("7820d3fb-00f8-4e93-ab57-280dbc664d71"),
                            Name = "Croquetas",
                            Price = 7.9900000000000002,
                            Tag = "Más vendidos"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Postre",
                            Description = "​Plato hecho de una rebanada de pan (habitualmente de varios días) que es empapada en leche, almíbar o vino y, tras ser rebozada en huevo, se fríe en una sartén con aceite.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/10.torrijas-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5302),
                            Md_uuid = new Guid("2260edd1-7d03-44af-bdc4-1085499f6028"),
                            Name = "Torrijas",
                            Price = 6.4500000000000002,
                            Tag = "Mejor valorados"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Postre",
                            Description = "​Tipo de fruta de sartén que se suele servir como dulce navideño o de Semana Santa, típico de Andalucía y otras zonas de España, elaborado con masa de harina, frito en aceite de oliva y pasado por miel.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/11.pestiños-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5311),
                            Md_uuid = new Guid("87277802-f255-4bfc-8e2a-2cb106f04233"),
                            Name = "Pestiños",
                            Price = 5.75,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Desayuno",
                            Description = "​Es una fruta de sartén hecha de agua, harina (de trigo generalmente, aunque puede ser de otro origen), aceite y sal. Pueden tener formas de bastón, en lazos o rulos (espirales).",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/12.churros-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5319),
                            Md_uuid = new Guid("efbe4a50-a405-4439-8202-91829308e19e"),
                            Name = "Churros",
                            Price = 3.9900000000000002,
                            Tag = "Más vendidos"
                        },
                        new
                        {
                            Id = 13,
                            Category = "Postre",
                            Description = "​Tipo de fritura de sartén dulce propia de la repostería española realizado a base de harina cocida con leche y azúcar hasta que este preparado espesa, cortándose la masa resultante en porciones que posteriormente se fríen.",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/13.leche-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5325),
                            Md_uuid = new Guid("9641f660-ca77-423a-9351-a8cbb609f7c3"),
                            Name = "Leche Frita",
                            Price = 4.75,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 14,
                            Category = "Postre",
                            Description = "Son una receta dulce propia de Extremadura que se preparan desde Todos los Santos, pasando por Carnaval hasta Semana Santa. Se trata de una receta muy antigua que nos recuerda a las rosquillas por el tipo de masa.​",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/14.huesillos-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5332),
                            Md_uuid = new Guid("1719382e-453b-4b6c-9d4b-34b0bb9f59ca"),
                            Name = "Huesillos Extremeños",
                            Price = 3.5,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 15,
                            Category = "Bebidas",
                            Description = "​Lata de CocaCola de 33cl. CocaCola Zero (sin azúcar) o CocaCola Original",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/15.cocacola-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5342),
                            Md_uuid = new Guid("5dc463f0-68d8-4a21-9750-1eaa24ac9d7e"),
                            Name = "CocaCola",
                            Price = 1.5,
                            Tag = "Más vendidos"
                        },
                        new
                        {
                            Id = 16,
                            Category = "Bebidas",
                            Description = "Lata de Fanta de 33cl. Fanta de naranja o Fanta de limón​",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/16.fanta-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5348),
                            Md_uuid = new Guid("ba7e5899-eb59-41af-87a9-35c18051e6ec"),
                            Name = "Fanta",
                            Price = 1.5,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 17,
                            Category = "Bebidas",
                            Description = "Lata de 7up de 33cl. 7up free (sin azúcar) o 7up original​",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/17.7up-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5355),
                            Md_uuid = new Guid("a4914410-c4d3-4556-800f-5e3edefb58a3"),
                            Name = "7up",
                            Price = 1.5,
                            Tag = "Recomendados"
                        },
                        new
                        {
                            Id = 18,
                            Category = "Bebidas",
                            Description = "​Lata de Cruzcampo de 33cl. Cerveza Pilsen",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/18.cruzcampo-pilsen-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5362),
                            Md_uuid = new Guid("e8956d00-90ec-4371-9ee6-da5225b6ef4b"),
                            Name = "Cruzcampo Pilsen",
                            Price = 1.8,
                            Tag = "Más vendidos"
                        },
                        new
                        {
                            Id = 19,
                            Category = "Bebidas",
                            Description = "​Lata de Cruzcampo de 33cl. Cerveza Especial",
                            Image = "https://efooddeliveryimages.blob.core.windows.net/efooddelivery-images/19.cruzcampo-especial-nobg.png",
                            Md_date = new DateTime(2023, 3, 27, 9, 43, 54, 904, DateTimeKind.Local).AddTicks(5371),
                            Md_uuid = new Guid("d3db638c-f01a-4d02-9ac6-88a1dd4cd531"),
                            Name = "Cruzcampo Especial",
                            Price = 1.8999999999999999,
                            Tag = "Mejor valorados"
                        });
                });

            modelBuilder.Entity("eFoodDelivery_API.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("dlk_users", "dlk_efooddelivery_api");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("eFoodDelivery_API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("eFoodDelivery_API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFoodDelivery_API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("eFoodDelivery_API.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eFoodDelivery_API.Entities.CartItem", b =>
                {
                    b.HasOne("eFoodDelivery_API.Entities.Cart", null)
                        .WithMany("CartItemsList")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFoodDelivery_API.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eFoodDelivery_API.Entities.Cart", b =>
                {
                    b.Navigation("CartItemsList");
                });
#pragma warning restore 612, 618
        }
    }
}
